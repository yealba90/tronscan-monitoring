-- ===============================================================
-- SCRIPT DE CREACIÃ“N DEL PROCEDIMIENTO CHECK_WALLET_RULES
-- Proyecto: TronScan Monitoring Pipeline
-- Autor: Yeison Alvarez Balvin
-- Fecha: 2025-10-06
-- ===============================================================
USE ROLE ACCOUNTADMIN;
USE WAREHOUSE COMPUTE_TRON_WH;
USE DATABASE TRON_SCAN_MONITORING;
USE SCHEMA TRANSACTIONS;

CREATE OR REPLACE PROCEDURE CHECK_WALLET_RULES()
RETURNS STRING
LANGUAGE SQL
AS
$$
BEGIN

-- ðŸ”¹ Reglas de conteo de transacciones (7d y 30d)
INSERT INTO ALERT_RULES_LOG (RULE_NAME, WALLET, PERIOD, METRIC_VALUE, THRESHOLD, STATUS)
SELECT
    t.rule_name,
    tx.OBSERVED_WALLET,
    CONCAT(t.PERIOD_DAYS, ' days'),
    COUNT(*) AS METRIC_VALUE,
    t.THRESHOLD,
    CASE WHEN COUNT(*) > t.THRESHOLD THEN 'ALERT' ELSE 'OK' END
FROM TRANSACTIONS tx
JOIN ALERT_THRESHOLDS t
  ON t.RULE_NAME LIKE 'Transaction Count Rule%' 
WHERE tx.TIMESTAMP_UTC >= DATEADD(day, -t.PERIOD_DAYS, CURRENT_TIMESTAMP())
GROUP BY tx.OBSERVED_WALLET, t.RULE_NAME, t.PERIOD_DAYS, t.THRESHOLD
HAVING COUNT(*) > t.THRESHOLD;

-- ðŸ”¹ Reglas de volumen total (7d y 30d)
INSERT INTO ALERT_RULES_LOG (RULE_NAME, WALLET, PERIOD, METRIC_VALUE, THRESHOLD, STATUS)
SELECT
    t.rule_name,
    tx.OBSERVED_WALLET,
    CONCAT(t.PERIOD_DAYS, ' days'),
    SUM(tx.AMOUNT) AS METRIC_VALUE,
    t.THRESHOLD,
    CASE WHEN SUM(tx.AMOUNT) > t.THRESHOLD THEN 'ALERT' ELSE 'OK' END
FROM TRANSACTIONS tx
JOIN ALERT_THRESHOLDS t
  ON t.RULE_NAME LIKE 'Transaction Volume Rule%' 
WHERE tx.TIMESTAMP_UTC >= DATEADD(day, -t.PERIOD_DAYS, CURRENT_TIMESTAMP())
GROUP BY tx.OBSERVED_WALLET, t.RULE_NAME, t.PERIOD_DAYS, t.THRESHOLD
HAVING SUM(tx.AMOUNT) > t.THRESHOLD;

RETURN 'âœ… Reglas de negocio ejecutadas correctamente.';
END;
$$;

